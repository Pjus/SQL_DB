-- -- 권한이 ROLE_STUDENT을 가진 목록
-- SELECT MEMBER_ID, `NAME`, PHONE_NUMBER, REGISTRY_DATE, AUTHORITY_ID FROM MEMBER
-- INNER JOIN AUTHORITY_MEMBER
-- ON AUTHORITY_MEMBER.MEMBER_SEQ = MEMBER.MEMBER_SEQ
-- WHERE AUTHORITY_MEMBER.AUTHORITY_ID = 'ROLE_STUDENT';


-- -- 강의 강연 조직 구조
-- WITH RECURSIVE TEMP AS(
--     SELECT NAME, PARENT_ORGANIZATION_SEQ AS PARENT, ORGANIZATION_SEQ FROM ORGANIZATION
--     WHERE NAME = '강의/강연 신'
--     UNION
--     SELECT ORGANIZATION.NAME, ORGANIZATION.PARENT_ORGANIZATION_SEQ, ORGANIZATION.ORGANIZATION_SEQ
--     FROM TEMP
--     INNER JOIN ORGANIZATION
--     ON TEMP.ORGANIZATION_SEQ = ORGANIZATION.PARENT_ORGANIZATION_SEQ
-- )
-- SELECT NAME,
--     CASE
--     WHEN PARENT IS NOT NULL
--     THEN (SELECT NAME FROM TEMP WHERE PARENT IS NULL)
--     END AS PARENT
-- FROM TEMP;




-- -- yojulab 소속
-- SELECT  M.`NAME` AS M_NAME, MEMBER_ID, B.AUTH_NAME, B.AUTHORITY_ID, O.ORG_NAME
-- FROM MEMBER AS M
-- LEFT OUTER JOIN(
--     SELECT * FROM AUTHORITY_MEMBER 
--     LEFT OUTER JOIN (
--         SELECT AUTHORITY_ID AS AUTH, NAME AS AUTH_NAME FROM AUTHORITY
--         ) AS AU
--     ON AUTHORITY_MEMBER.AUTHORITY_ID = AU.AUTH
--     ) AS B
-- ON M.`MEMBER_SEQ` = B.`MEMBER_SEQ`
-- LEFT OUTER JOIN(
--     SELECT ORGM.MEMBER_SEQ AS MEM_SEQ, ORG.ORG_NAME FROM ORGANIZATION_MEMBER AS ORGM
--     LEFT OUTER JOIN(
--         SELECT ORGANIZATION_SEQ AS ORG_SEQ, NAME AS ORG_NAME FROM ORGANIZATION) AS ORG
--     ON ORGM.ORGANIZATION_SEQ = ORG.ORG_SEQ
--     ) AS O
-- ON M.MEMBER_SEQ = O.MEM_SEQ
-- WHERE M.`NAME` = 'yojulab Admin';



-- -- 'yojulab' 속한 기관 강의 목록
-- SELECT MEMBER_ID, NAME AS M_NAME, ORGANIZATION_SEQ AS MEM_ORG FROM MEMBER
-- LEFT OUTER JOIN ORGANIZATION_MEMBER
-- ON MEMBER.MEMBER_SEQ = ORGANIZATION_MEMBER.MEMBER_SEQ
-- INNER JOIN(
--     SELECT ORGANIZATION_SEQ AS MM, NAME AS ORG_NAME, TITLE, CONTENT  FROM ORGANIZATION
--     LEFT OUTER JOIN (
--         SELECT TITLE, CONTENT, ORGANIZATION_SEQ AS ORG_SEQ FROM COURSE
--         INNER JOIN ORGANIZATION_COURSE  
--         ON COURSE.COURSE_SEQ = ORGANIZATION_COURSE.COURSE_SEQ) AS CO
--     ON ORGANIZATION.`MM` = CO.ORG_SEQ
-- )AS ORG_MEM
-- ON ORG_MEM.MM = MEMBER.MEM_ORG;

-- -- organization & course join key = org_SEQ
-- SELECT MEMBER_ID, M_NAME, NAME, TITLE, CONTENT  FROM ORGANIZATION
-- INNER JOIN (
--     SELECT TITLE, CONTENT, ORGANIZATION_SEQ AS ORG_SEQ FROM COURSE
--     INNER JOIN ORGANIZATION_COURSE  
--     ON COURSE.COURSE_SEQ = ORGANIZATION_COURSE.COURSE_SEQ) AS CO
-- ON ORGANIZATION.ORGANIZATION_SEQ = CO.ORG_SEQ
-- INNER JOIN(
--     -- member & organization join, key = org_SEQ
--     SELECT MEMBER_ID, NAME AS M_NAME, ORGANIZATION_SEQ AS MEM_ORG FROM MEMBER
--     LEFT OUTER JOIN ORGANIZATION_MEMBER
--     ON MEMBER.MEMBER_SEQ = ORGANIZATION_MEMBER.MEMBER_SEQ
-- ) AS mem
-- ON mem.`MEM_ORG` = ORGANIZATION.ORGANIZATION_SEQ;






-- -- 쇼핑몰 플랫폼 입점 무역인 판매 전략 소규모 강의
-- -- key = COURSE_SEQ
-- SELECT * FROM COURSE
-- WHERE TITLE = '쇼핑몰 플랫폼 입점 무역인 판매 전략 소규모 강의';

-- -- COURSE_SEQ, TITLE
-- SELECT * FROM COURSE_QUESTION
-- LEFT OUTER JOIN QUESTION
-- ON COURSE_QUESTION.QUESTION_SEQ = QUESTION.QUESTION_SEQ;


-- SELECT COURSE_QUESTION_SEQ, COURSE_SEQ, QUESTION_SEQ FROM COURSE_QUESTION;


-- 쇼핑몰 플랫폼 입점 무역인 판매 전략 소규모 강의
-- key = COURSE_SEQ
SELECT * FROM COURSE
left OUTER JOIN(
    -- COURSE_SEQ, TITLE
    SELECT COURSE_QUESTION_SEQ, COURSE_SEQ AS CS, QUESTION_SEQ, TITLE FROM COURSE_QUESTION
    LEFT OUTER JOIN QUESTION
    ON COURSE_QUESTION.QUESTION_SEQ = QUESTION.QUESTION_SEQ
) AS Q
ON COURSE.COURSE_SEQ = Q.QC
WHERE TITLE = '쇼핑몰 플랫폼 입점 무역인 판매 전략 소규모 강의';
